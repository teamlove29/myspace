{"ast":null,"code":"/* eslint-disable */\n\"use strict\";\n\nimport KTToggle from \"./../../components/toggle.js\";\nimport KTLayoutStickyCard from \"./sticky-card.js\";\nimport KTLayoutHeaderMenu from \"./header-menu.js\";\nimport KTLayoutAsideMenu from \"./aside-menu.js\";\nimport { KTCookie } from \"./../../components/cookie.js\";\nimport { KTUtil } from \"./../../components/util.js\";\n\nvar KTLayoutAsideToggle = function () {\n  // Private properties\n  var _body;\n\n  var _element;\n\n  var _toggleObject; // Initialize\n\n\n  var _init = function () {\n    _toggleObject = new KTToggle(_element, {\n      target: _body,\n      targetState: 'aside-minimize',\n      toggleState: 'active'\n    });\n\n    _toggleObject.on('toggle', function (toggle) {\n      // Update sticky card\n      if (typeof KTLayoutStickyCard !== 'undefined') {\n        KTLayoutStickyCard.update();\n      } // Pause header menu dropdowns\n\n\n      if (typeof KTLayoutHeaderMenu !== 'undefined') {\n        KTLayoutHeaderMenu.pauseDropdownHover(800);\n      } // Pause aside menu dropdowns\n\n\n      if (typeof KTLayoutAsideMenu !== 'undefined') {\n        KTLayoutAsideMenu.pauseDropdownHover(800);\n      } // Remember state in cookie\n\n\n      KTCookie.setCookie('kt_aside_toggle_state', toggle.getState()); // to set default minimized left aside use this cookie value in your\n      // server side code and add \"kt-primary--minimize aside-minimize\" classes to\n      // the body tag in order to initialize the minimized left aside mode during page loading.\n    });\n\n    _toggleObject.on('beforeToggle', function (toggle) {\n      if (KTUtil.hasClass(_body, 'aside-minimize') === false && KTUtil.hasClass(_body, 'aside-minimize-hover')) {\n        KTUtil.removeClass(_body, 'aside-minimize-hover');\n      }\n    });\n  }; // Public methods\n\n\n  return {\n    init: function (id) {\n      _element = KTUtil.getById(id);\n      _body = KTUtil.getBody();\n\n      if (!_element) {\n        return;\n      } // Initialize\n\n\n      _init();\n    },\n    getElement: function () {\n      return _element;\n    },\n    getToggle: function () {\n      return _toggleObject;\n    },\n    onToggle: function (handler) {\n      if (typeof _toggleObject.element !== 'undefined') {\n        _toggleObject.on('toggle', handler);\n      }\n    }\n  };\n}(); // Webpack support\n\n\nif (typeof module !== 'undefined') {// module.exports = KTLayoutAsideToggle;\n}\n\nexport default KTLayoutAsideToggle;","map":{"version":3,"sources":["/Users/teem/Developer/lampang-myspace/backoffice/src/_metronic/_assets/js/layout/base/aside-toggle.js"],"names":["KTToggle","KTLayoutStickyCard","KTLayoutHeaderMenu","KTLayoutAsideMenu","KTCookie","KTUtil","KTLayoutAsideToggle","_body","_element","_toggleObject","_init","target","targetState","toggleState","on","toggle","update","pauseDropdownHover","setCookie","getState","hasClass","removeClass","init","id","getById","getBody","getElement","getToggle","onToggle","handler","element","module"],"mappings":"AAAA;AACA;;AAEA,OAAOA,QAAP,MAAqB,8BAArB;AACA,OAAOC,kBAAP,MAA+B,kBAA/B;AACA,OAAOC,kBAAP,MAA+B,kBAA/B;AACA,OAAOC,iBAAP,MAA8B,iBAA9B;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,SAASC,MAAT,QAAuB,4BAAvB;;AAEA,IAAIC,mBAAmB,GAAG,YAAW;AACjC;AACA,MAAIC,KAAJ;;AACA,MAAIC,QAAJ;;AACA,MAAIC,aAAJ,CAJiC,CAMpC;;;AACA,MAAIC,KAAK,GAAG,YAAW;AACtBD,IAAAA,aAAa,GAAG,IAAIT,QAAJ,CAAaQ,QAAb,EAAuB;AACtCG,MAAAA,MAAM,EAAEJ,KAD8B;AAEtCK,MAAAA,WAAW,EAAE,gBAFyB;AAGtCC,MAAAA,WAAW,EAAE;AAHyB,KAAvB,CAAhB;;AAMAJ,IAAAA,aAAa,CAACK,EAAd,CAAiB,QAAjB,EAA2B,UAASC,MAAT,EAAiB;AAClC;AACA,UAAI,OAAOd,kBAAP,KAA8B,WAAlC,EAA+C;AAC3CA,QAAAA,kBAAkB,CAACe,MAAnB;AACH,OAJiC,CAMlC;;;AACA,UAAI,OAAOd,kBAAP,KAA8B,WAAlC,EAA+C;AAC3CA,QAAAA,kBAAkB,CAACe,kBAAnB,CAAsC,GAAtC;AACH,OATiC,CAWlC;;;AACA,UAAI,OAAOd,iBAAP,KAA6B,WAAjC,EAA8C;AAC1CA,QAAAA,iBAAiB,CAACc,kBAAlB,CAAqC,GAArC;AACH,OAdiC,CAgBlC;;;AACTb,MAAAA,QAAQ,CAACc,SAAT,CAAmB,uBAAnB,EAA4CH,MAAM,CAACI,QAAP,EAA5C,EAjB2C,CAkB3C;AACA;AACA;AACA,KArBD;;AAuBAV,IAAAA,aAAa,CAACK,EAAd,CAAiB,cAAjB,EAAiC,UAASC,MAAT,EAAiB;AACjD,UAAIV,MAAM,CAACe,QAAP,CAAgBb,KAAhB,EAAuB,gBAAvB,MAA6C,KAA7C,IAAsDF,MAAM,CAACe,QAAP,CAAgBb,KAAhB,EAAuB,sBAAvB,CAA1D,EAA0G;AACzGF,QAAAA,MAAM,CAACgB,WAAP,CAAmBd,KAAnB,EAA0B,sBAA1B;AACA;AACD,KAJD;AAKA,GAnCD,CAPoC,CA4CjC;;;AACH,SAAO;AACNe,IAAAA,IAAI,EAAE,UAASC,EAAT,EAAa;AACTf,MAAAA,QAAQ,GAAGH,MAAM,CAACmB,OAAP,CAAeD,EAAf,CAAX;AACAhB,MAAAA,KAAK,GAAGF,MAAM,CAACoB,OAAP,EAAR;;AAEA,UAAI,CAACjB,QAAL,EAAe;AACX;AACH,OANQ,CAQT;;;AACAE,MAAAA,KAAK;AACd,KAXK;AAaAgB,IAAAA,UAAU,EAAE,YAAW;AACnB,aAAOlB,QAAP;AACH,KAfD;AAiBAmB,IAAAA,SAAS,EAAE,YAAW;AAC3B,aAAOlB,aAAP;AACA,KAnBK;AAqBNmB,IAAAA,QAAQ,EAAE,UAASC,OAAT,EAAkB;AAC3B,UAAI,OAAOpB,aAAa,CAACqB,OAArB,KAAiC,WAArC,EAAkD;AACjDrB,QAAAA,aAAa,CAACK,EAAd,CAAiB,QAAjB,EAA2Be,OAA3B;AACA;AACD;AAzBK,GAAP;AA2BA,CAxEyB,EAA1B,C,CA0EA;;;AACA,IAAI,OAAOE,MAAP,KAAkB,WAAtB,EAAmC,CAClC;AACA;;AAED,eAAezB,mBAAf","sourcesContent":["/* eslint-disable */\n\"use strict\";\n\nimport KTToggle from \"./../../components/toggle.js\";\nimport KTLayoutStickyCard from \"./sticky-card.js\";\nimport KTLayoutHeaderMenu from \"./header-menu.js\";\nimport KTLayoutAsideMenu from \"./aside-menu.js\";\nimport { KTCookie } from \"./../../components/cookie.js\";\nimport { KTUtil } from \"./../../components/util.js\";\n\nvar KTLayoutAsideToggle = function() {\n    // Private properties\n    var _body;\n    var _element;\n    var _toggleObject;\n\n\t// Initialize\n\tvar _init = function() {\n\t\t_toggleObject = new KTToggle(_element, {\n\t\t\ttarget: _body,\n\t\t\ttargetState: 'aside-minimize',\n\t\t\ttoggleState: 'active'\n\t\t});\n\n\t\t_toggleObject.on('toggle', function(toggle) {\n            // Update sticky card\n            if (typeof KTLayoutStickyCard !== 'undefined') {\n                KTLayoutStickyCard.update();\n            }\n\n            // Pause header menu dropdowns\n            if (typeof KTLayoutHeaderMenu !== 'undefined') {\n                KTLayoutHeaderMenu.pauseDropdownHover(800);\n            }\n\n            // Pause aside menu dropdowns\n            if (typeof KTLayoutAsideMenu !== 'undefined') {\n                KTLayoutAsideMenu.pauseDropdownHover(800);\n            }\n\n            // Remember state in cookie\n\t\t\tKTCookie.setCookie('kt_aside_toggle_state', toggle.getState());\n\t\t\t// to set default minimized left aside use this cookie value in your\n\t\t\t// server side code and add \"kt-primary--minimize aside-minimize\" classes to\n\t\t\t// the body tag in order to initialize the minimized left aside mode during page loading.\n\t\t});\n\n\t\t_toggleObject.on('beforeToggle', function(toggle) {\n\t\t\tif (KTUtil.hasClass(_body, 'aside-minimize') === false && KTUtil.hasClass(_body, 'aside-minimize-hover')) {\n\t\t\t\tKTUtil.removeClass(_body, 'aside-minimize-hover');\n\t\t\t}\n\t\t});\n\t}\n\n    // Public methods\n\treturn {\n\t\tinit: function(id) {\n            _element = KTUtil.getById(id);\n            _body = KTUtil.getBody();\n\n            if (!_element) {\n                return;\n            }\n\n            // Initialize\n            _init();\n\t\t},\n\n        getElement: function() {\n            return _element;\n        },\n\n        getToggle: function() {\n\t\t\treturn _toggleObject;\n\t\t},\n\n\t\tonToggle: function(handler) {\n\t\t\tif (typeof _toggleObject.element !== 'undefined') {\n\t\t\t\t_toggleObject.on('toggle', handler);\n\t\t\t}\n\t\t}\n\t};\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n\t// module.exports = KTLayoutAsideToggle;\n}\n\nexport default KTLayoutAsideToggle;"]},"metadata":{},"sourceType":"module"}