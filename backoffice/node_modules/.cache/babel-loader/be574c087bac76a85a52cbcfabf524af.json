{"ast":null,"code":"var _jsxFileName = \"/Users/teem/Developer/lampang-myspace/backoffice/src/_metronic/i18n/Metronici18n.js\";\nimport React, { createContext } from \"react\";\nimport { useMemo } from \"react\";\nimport { useContext } from \"react\";\nconst I18N_CONFIG_KEY = process.env.REACT_APP_I18N_CONFIG_KEY || \"i18nConfig\";\nconst initialState = {\n  selectedLang: \"en\"\n};\n\nfunction getConfig() {\n  const ls = localStorage.getItem(I18N_CONFIG_KEY);\n\n  if (ls) {\n    try {\n      return JSON.parse(ls);\n    } catch (er) {\n      console.error(er);\n    }\n  }\n\n  return initialState;\n} // Side effect\n\n\nexport function setLanguage(lang) {\n  localStorage.setItem(I18N_CONFIG_KEY, JSON.stringify({\n    selectedLang: lang\n  }));\n  window.location.reload();\n}\nconst I18nContext = createContext();\nexport function useLang() {\n  return useContext(I18nContext).selectedLang;\n}\nexport function withI18n(Component) {\n  class WithI18n extends React.Component {\n    render() {\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, this.props, {\n        menu: this.context,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }\n      }));\n    }\n\n  }\n\n  WithI18n.displayName = `WithI18n(${Component.displayName || Component.name})`;\n  WithI18n.contextType = I18nContext;\n  return WithI18n;\n}\nexport const I18nConsumer = I18nContext.Consumer;\nexport function MetronicI18nProvider({\n  children\n}) {\n  const lang = useMemo(getConfig, []);\n  return /*#__PURE__*/React.createElement(I18nContext.Provider, {\n    value: lang,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }, children);\n}","map":{"version":3,"sources":["/Users/teem/Developer/lampang-myspace/backoffice/src/_metronic/i18n/Metronici18n.js"],"names":["React","createContext","useMemo","useContext","I18N_CONFIG_KEY","process","env","REACT_APP_I18N_CONFIG_KEY","initialState","selectedLang","getConfig","ls","localStorage","getItem","JSON","parse","er","console","error","setLanguage","lang","setItem","stringify","window","location","reload","I18nContext","useLang","withI18n","Component","WithI18n","render","props","context","displayName","name","contextType","I18nConsumer","Consumer","MetronicI18nProvider","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,UAAR,QAAyB,OAAzB;AAEA,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAAZ,IAAyC,YAAjE;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AADG,CAArB;;AAIA,SAASC,SAAT,GAAqB;AACnB,QAAMC,EAAE,GAAGC,YAAY,CAACC,OAAb,CAAqBT,eAArB,CAAX;;AACA,MAAIO,EAAJ,EAAQ;AACN,QAAI;AACF,aAAOG,IAAI,CAACC,KAAL,CAAWJ,EAAX,CAAP;AACD,KAFD,CAEE,OAAOK,EAAP,EAAW;AACXC,MAAAA,OAAO,CAACC,KAAR,CAAcF,EAAd;AACD;AACF;;AACD,SAAOR,YAAP;AACD,C,CAED;;;AACA,OAAO,SAASW,WAAT,CAAqBC,IAArB,EAA2B;AAChCR,EAAAA,YAAY,CAACS,OAAb,CAAqBjB,eAArB,EAAsCU,IAAI,CAACQ,SAAL,CAAe;AAAEb,IAAAA,YAAY,EAAEW;AAAhB,GAAf,CAAtC;AACAG,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AAED,MAAMC,WAAW,GAAGzB,aAAa,EAAjC;AAEA,OAAO,SAAS0B,OAAT,GAAmB;AACxB,SAAOxB,UAAU,CAACuB,WAAD,CAAV,CAAwBjB,YAA/B;AACD;AAED,OAAO,SAASmB,QAAT,CAAkBC,SAAlB,EAA6B;AAClC,QAAMC,QAAN,SAAuB9B,KAAK,CAAC6B,SAA7B,CAAuC;AAKrCE,IAAAA,MAAM,GAAG;AACP,0BAAO,oBAAC,SAAD,oBAAe,KAAKC,KAApB;AAA2B,QAAA,IAAI,EAAE,KAAKC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;AAPoC;;AAAjCH,EAAAA,QAD4B,CAEzBI,WAFyB,GAEV,YAAWL,SAAS,CAACK,WAAV,IAAyBL,SAAS,CAACM,IAAK,GAFzC;AAC5BL,EAAAA,QAD4B,CAIzBM,WAJyB,GAIXV,WAJW;AAWlC,SAAOI,QAAP;AACD;AAED,OAAO,MAAMO,YAAY,GAAGX,WAAW,CAACY,QAAjC;AAEP,OAAO,SAASC,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA4C;AACjD,QAAMpB,IAAI,GAAGlB,OAAO,CAACQ,SAAD,EAAY,EAAZ,CAApB;AAEA,sBAAO,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEU,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCoB,QAApC,CAAP;AACD","sourcesContent":["import React, {createContext} from \"react\";\nimport {useMemo} from \"react\";\nimport {useContext} from \"react\";\n\nconst I18N_CONFIG_KEY = process.env.REACT_APP_I18N_CONFIG_KEY || \"i18nConfig\";\nconst initialState = {\n    selectedLang: \"en\"\n  };\n\nfunction getConfig() {\n  const ls = localStorage.getItem(I18N_CONFIG_KEY);\n  if (ls) {\n    try {\n      return JSON.parse(ls);\n    } catch (er) {\n      console.error(er);\n    }\n  }\n  return initialState;\n}\n\n// Side effect\nexport function setLanguage(lang) {\n  localStorage.setItem(I18N_CONFIG_KEY, JSON.stringify({ selectedLang: lang }));\n  window.location.reload();\n}\n\nconst I18nContext = createContext();\n\nexport function useLang() {\n  return useContext(I18nContext).selectedLang;\n}\n\nexport function withI18n(Component) {\n  class WithI18n extends React.Component {\n    static displayName = `WithI18n(${Component.displayName || Component.name})`;\n\n    static contextType = I18nContext;\n\n    render() {\n      return <Component {...this.props} menu={this.context} />;\n    }\n  }\n\n  return WithI18n;\n}\n\nexport const I18nConsumer = I18nContext.Consumer;\n\nexport function MetronicI18nProvider({ children }) {\n  const lang = useMemo(getConfig, []);\n\n  return <I18nContext.Provider value={lang}>{children}</I18nContext.Provider>;\n}\n"]},"metadata":{},"sourceType":"module"}