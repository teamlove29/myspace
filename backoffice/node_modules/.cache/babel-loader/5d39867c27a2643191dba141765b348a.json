{"ast":null,"code":"var _jsxFileName = \"/Users/teem/Developer/lampang-myspace/backoffice/src/_metronic/_partials/controls/forms/Input.js\";\nimport React from \"react\";\nimport { FieldFeedbackLabel } from \"./FieldFeedbackLabel\";\n\nconst getFieldCSSClasses = (touched, errors) => {\n  const classes = [\"form-control\"];\n\n  if (touched && errors) {\n    classes.push(\"is-invalid\");\n  }\n\n  if (touched && !errors) {\n    classes.push(\"is-valid\");\n  }\n\n  return classes.join(\" \");\n};\n\nexport function Input({\n  field,\n  // { name, value, onChange, onBlur }\n  form: {\n    touched,\n    errors\n  },\n  // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  label,\n  withFeedbackLabel = true,\n  customFeedbackLabel,\n  type = \"text\",\n  ...props\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, label && /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Enter \", label), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: type,\n    className: getFieldCSSClasses(touched[field.name], errors[field.name])\n  }, field, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  })), withFeedbackLabel && /*#__PURE__*/React.createElement(FieldFeedbackLabel, {\n    error: errors[field.name],\n    touched: touched[field.name],\n    label: label,\n    type: type,\n    customFeedbackLabel: customFeedbackLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/teem/Developer/lampang-myspace/backoffice/src/_metronic/_partials/controls/forms/Input.js"],"names":["React","FieldFeedbackLabel","getFieldCSSClasses","touched","errors","classes","push","join","Input","field","form","label","withFeedbackLabel","customFeedbackLabel","type","props","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,QAAiC,sBAAjC;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC9C,QAAMC,OAAO,GAAG,CAAC,cAAD,CAAhB;;AACA,MAAIF,OAAO,IAAIC,MAAf,EAAuB;AACrBC,IAAAA,OAAO,CAACC,IAAR,CAAa,YAAb;AACD;;AAED,MAAIH,OAAO,IAAI,CAACC,MAAhB,EAAwB;AACtBC,IAAAA,OAAO,CAACC,IAAR,CAAa,UAAb;AACD;;AAED,SAAOD,OAAO,CAACE,IAAR,CAAa,GAAb,CAAP;AACD,CAXD;;AAaA,OAAO,SAASC,KAAT,CAAe;AACpBC,EAAAA,KADoB;AACb;AACPC,EAAAA,IAAI,EAAE;AAAEP,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAFc;AAEO;AAC3BO,EAAAA,KAHoB;AAIpBC,EAAAA,iBAAiB,GAAG,IAJA;AAKpBC,EAAAA,mBALoB;AAMpBC,EAAAA,IAAI,GAAG,MANa;AAOpB,KAAGC;AAPiB,CAAf,EAQJ;AACD,sBACE,0CACGJ,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAcA,KAAd,CADZ,eAEE;AACE,IAAA,IAAI,EAAEG,IADR;AAEE,IAAA,SAAS,EAAEZ,kBAAkB,CAACC,OAAO,CAACM,KAAK,CAACO,IAAP,CAAR,EAAsBZ,MAAM,CAACK,KAAK,CAACO,IAAP,CAA5B;AAF/B,KAGMP,KAHN,EAIMM,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAQGH,iBAAiB,iBAChB,oBAAC,kBAAD;AACE,IAAA,KAAK,EAAER,MAAM,CAACK,KAAK,CAACO,IAAP,CADf;AAEE,IAAA,OAAO,EAAEb,OAAO,CAACM,KAAK,CAACO,IAAP,CAFlB;AAGE,IAAA,KAAK,EAAEL,KAHT;AAIE,IAAA,IAAI,EAAEG,IAJR;AAKE,IAAA,mBAAmB,EAAED,mBALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADF;AAoBD","sourcesContent":["import React from \"react\";\nimport {FieldFeedbackLabel} from \"./FieldFeedbackLabel\";\n\nconst getFieldCSSClasses = (touched, errors) => {\n  const classes = [\"form-control\"];\n  if (touched && errors) {\n    classes.push(\"is-invalid\");\n  }\n\n  if (touched && !errors) {\n    classes.push(\"is-valid\");\n  }\n\n  return classes.join(\" \");\n};\n\nexport function Input({\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  label,\n  withFeedbackLabel = true,\n  customFeedbackLabel,\n  type = \"text\",\n  ...props\n}) {\n  return (\n    <>\n      {label && <label>Enter {label}</label>}\n      <input\n        type={type}\n        className={getFieldCSSClasses(touched[field.name], errors[field.name])}\n        {...field}\n        {...props}\n      />\n      {withFeedbackLabel && (\n        <FieldFeedbackLabel\n          error={errors[field.name]}\n          touched={touched[field.name]}\n          label={label}\n          type={type}\n          customFeedbackLabel={customFeedbackLabel}\n        />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}