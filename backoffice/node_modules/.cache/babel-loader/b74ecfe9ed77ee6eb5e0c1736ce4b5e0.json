{"ast":null,"code":"var _jsxFileName = \"/Users/teem/Developer/lampang-myspace/backoffice/src/pages/user/AddUser.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport firebase from \"../../config/config\";\nimport Axios from \"axios\";\nimport { Success } from \"../../components/modal/ModalSuccess\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nexport default function AddUser(props) {\n  const history = useHistory();\n  const MySwal = withReactContent(Swal);\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => {\n    setShow(false);\n    setTimeout(() => {\n      history.goBack();\n    }, 100);\n  };\n\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    handleShow();\n  }, [props.show]);\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\"\n  };\n\n  const enableLoading = () => {\n    setLoading(true);\n  };\n\n  const disableLoading = () => {\n    setLoading(false);\n  };\n\n  const getInputClasses = fieldname => {\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\n      return \"is-invalid\";\n    }\n\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n      return \"is-valid\";\n    }\n\n    return \"\";\n  };\n\n  const handleedit = (value, {\n    setStatus,\n    setSubmitting\n  }) => {\n    const username = value.username;\n    const email = value.email;\n    const password = value.password; // Axios.post('http://localhost:5001/myspace-dev-1ae9e/us-central1/backoffice-user/newUser'\n    // ,{email,password,phone,firstName,lastName})\n    // .then((res) => {\n    //   setStatus('Success !')\n    //   formik.handleReset()\n    // }).catch((err) => {\n    //   var errorCode = err.code;\n    //   var errorMessage = err.message;\n    //   setStatus(errorCode)\n    //   console.log(errorMessage)\n    // })\n\n    console.log(value);\n    Success();\n    disableLoading();\n    setSubmitting(false);\n    formik.handleReset();\n    handleClose(); //  MySwal.fire({\n    //   position: 'center',\n    //   icon: \"success\",\n    //   title: <h1 className=\"display-3\">success</h1>,\n    //   showConfirmButton: false,\n    // }).then(() => {\n    //   disableLoading()\n    //   setSubmitting(false);\n    //   formik.handleReset()\n    // })\n  };\n\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n  const Userchema = Yup.object().shape({\n    firstName: Yup.string().min(3, \"Minimum 3 symbols\").max(50, \"Maximum 50 symbols\").required(\"Required\"),\n    lastName: Yup.string().min(3, \"Minimum 3 symbols\").max(50, \"Maximum 50 symbols\").required(\"Required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n    password: Yup.string().oneOf([Yup.ref(\"passwordConfirmation\"), null], \"Passwords must match\").min(6, \"Minimum 6 symbols\").required(\"Required\"),\n    passwordConfirmation: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").min(6, \"Minimum 6 symbols\").required(\"Required\"),\n    phone: Yup.string().matches(phoneRegExp, \"Phone number is not valid\").min(10, \"min 10 symbols\").max(10, \"Maximum 10 symbols\").required(\"Required\")\n  });\n  const formik = useFormik({\n    initialValues,\n    validationSchema: Userchema,\n    onSubmit: (value, {\n      setStatus,\n      setSubmitting\n    }) => {\n      enableLoading();\n      setTimeout(() => {\n        handleedit(value, {\n          setStatus,\n          setSubmitting\n        });\n      }, 1000);\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, \"New User\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-12 col-xxl-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, formik.status ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-10 alert alert-custom alert-light-danger alert-dismissible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }, formik.status)) : null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: `form-control form-control-lg  ${getInputClasses(\"username\")}`,\n    name: \"username\",\n    type: \"text\",\n    placeholder: \"username\"\n  }, formik.getFieldProps(\"username\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 27\n    }\n  })), formik.touched.username && formik.errors.username ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-plugins-message-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-help-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 31\n    }\n  }, formik.errors.username)) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    name: \"email\",\n    type: \"email\",\n    className: `form-control form-control-lg  ${getInputClasses(\"email\")}`,\n    name: \"email\",\n    placeholder: \"Email\"\n  }, formik.getFieldProps(\"email\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }))), formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-plugins-message-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-help-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 31\n    }\n  }, formik.errors.email)) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    name: \"password\",\n    type: \"password\",\n    className: `form-control form-control-lg  ${getInputClasses(\"password\")}`,\n    name: \"password\",\n    placeholder: \"password\"\n  }, formik.getFieldProps(\"password\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 27\n    }\n  })), formik.touched.password && formik.errors.password ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-plugins-message-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-help-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 31\n    }\n  }, formik.errors.password)) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }, \"passwordConfirmation\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    name: \"passwordConfirmation\",\n    type: \"password\",\n    className: `form-control form-control-lg  ${getInputClasses(\"passwordConfirmation\")}`,\n    name: \"passwordConfirmation\",\n    placeholder: \"passwordConfirmation\"\n  }, formik.getFieldProps(\"passwordConfirmation\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 27\n    }\n  })), formik.touched.passwordConfirmation && formik.errors.passwordConfirmation ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-plugins-message-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-help-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 31\n    }\n  }, formik.errors.passwordConfirmation)) : null)))))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleClose(),\n    variant: \"secondary\",\n    className: \"btn btn-secondary font-weight-bold px-9 py-4 mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, \"cancel\"), /*#__PURE__*/React.createElement(Button, {\n    id: \"kt_login_signin_submit\",\n    type: \"submit\",\n    className: `btn btn-success font-weight-bold px-9 py-4 my-3`,\n    disabled: formik.isSubmitting,\n    variant: \"success\",\n    onClick: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, \"submit\", loading && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-3 spinner spinner-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/teem/Developer/lampang-myspace/backoffice/src/pages/user/AddUser.js"],"names":["React","useState","useEffect","useFormik","Yup","Modal","Button","useHistory","Redirect","firebase","Axios","Success","Swal","withReactContent","AddUser","props","history","MySwal","loading","setLoading","success","setSuccess","show","setShow","handleClose","setTimeout","goBack","handleShow","initialValues","username","email","password","passwordConfirmation","enableLoading","disableLoading","getInputClasses","fieldname","formik","touched","errors","handleedit","value","setStatus","setSubmitting","console","log","handleReset","phoneRegExp","Userchema","object","shape","firstName","string","min","max","required","lastName","oneOf","ref","phone","matches","validationSchema","onSubmit","status","handleSubmit","getFieldProps","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport firebase from \"../../config/config\";\nimport Axios from \"axios\";\nimport { Success } from \"../../components/modal/ModalSuccess\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nexport default function AddUser(props) {\n  const history = useHistory()\n  const MySwal = withReactContent(Swal);\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [show, setShow] = useState(true);\n  const handleClose = () => {\n    setShow(false)\n    setTimeout(() => {\n      history.goBack()\n    }, 100)\n};\n  const handleShow = () => setShow(true);\n\n\nuseEffect(() => {\n  handleShow()\n}, [props.show])\n\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n  };\n\n  const enableLoading = () => {\n    setLoading(true);\n  };\n  const disableLoading = () => {\n    setLoading(false);\n  };\n\n  const getInputClasses = (fieldname) => {\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\n      return \"is-invalid\";\n    }\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n      return \"is-valid\";\n    }\n    return \"\";\n  };\n\n  const handleedit = (value, { setStatus, setSubmitting }) => {\n    const username = value.username;\n    const email = value.email;\n    const password = value.password;\n    // Axios.post('http://localhost:5001/myspace-dev-1ae9e/us-central1/backoffice-user/newUser'\n    // ,{email,password,phone,firstName,lastName})\n    // .then((res) => {\n    //   setStatus('Success !')\n    //   formik.handleReset()\n    // }).catch((err) => {\n    //   var errorCode = err.code;\n    //   var errorMessage = err.message;\n    //   setStatus(errorCode)\n    //   console.log(errorMessage)\n    // })\n\n    console.log(value);\n    Success();\n    disableLoading();\n    setSubmitting(false);\n    formik.handleReset();\n    handleClose();\n    //  MySwal.fire({\n    //   position: 'center',\n    //   icon: \"success\",\n    //   title: <h1 className=\"display-3\">success</h1>,\n    //   showConfirmButton: false,\n    // }).then(() => {\n    //   disableLoading()\n    //   setSubmitting(false);\n    //   formik.handleReset()\n    // })\n  };\n\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\n  const Userchema = Yup.object().shape({\n    firstName: Yup.string()\n      .min(3, \"Minimum 3 symbols\")\n      .max(50, \"Maximum 50 symbols\")\n      .required(\"Required\"),\n    lastName: Yup.string()\n      .min(3, \"Minimum 3 symbols\")\n      .max(50, \"Maximum 50 symbols\")\n      .required(\"Required\"),\n    email: Yup.string()\n      .email(\"Invalid email\")\n      .required(\"Required\"),\n    password: Yup.string()\n      .oneOf([Yup.ref(\"passwordConfirmation\"), null], \"Passwords must match\")\n      .min(6, \"Minimum 6 symbols\")\n      .required(\"Required\"),\n    passwordConfirmation: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      .min(6, \"Minimum 6 symbols\")\n      .required(\"Required\"),\n    phone: Yup.string()\n      .matches(phoneRegExp, \"Phone number is not valid\")\n      .min(10, \"min 10 symbols\")\n      .max(10, \"Maximum 10 symbols\")\n      .required(\"Required\"),\n  });\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: Userchema,\n    onSubmit: (value, { setStatus, setSubmitting }) => {\n      enableLoading();\n      setTimeout(() => {\n        handleedit(value, { setStatus, setSubmitting });\n      }, 1000);\n    },\n  });\n\n  return (\n    <>\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        show={show}\n        onHide={handleClose}\n      >\n        <Modal.Header >\n          <Modal.Title>New User</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row justify-content-center \">\n            <div className=\"col-xl-12 col-xxl-12\">\n              {/*begin::Form Wizard*/}\n              {formik.status ? (\n                <div className=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\">\n                  <div className=\"alert-text font-weight-bold\">\n                    {formik.status}\n                  </div>\n                </div>\n              ) : null}\n              <form onSubmit={formik.handleSubmit} className=\"form\">\n                {/*begin::Step 1*/}\n                  <div className=\"row\">\n                    <div className=\"col-xl-12\">\n  \n                      <div className=\"form-group row\">\n                        <label className=\"col-xl-3 col-lg-3 col-form-label\">\n                          Username\n                        </label>\n                        <div className=\"col-lg-9 col-xl-9\">\n                          <input\n                            className={`form-control form-control-lg  ${getInputClasses(\n                              \"username\"\n                            )}`}\n                            name=\"username\"\n                            type=\"text\"\n                            placeholder=\"username\"\n                            {...formik.getFieldProps(\"username\")}\n                          />\n                          {formik.touched.username && formik.errors.username ? (\n                            <div className=\"fv-plugins-message-container\">\n                              <div className=\"fv-help-block\">\n                                {formik.errors.username}\n                              </div>\n                            </div>\n                          ) : null}\n                        </div>\n                      </div>\n\n                      <div className=\"form-group row\">\n                        <label className=\"col-xl-3 col-lg-3 col-form-label\">\n                          Email Address\n                        </label>\n                        <div className=\"col-lg-9 col-xl-9\">\n                          <div className=\"input-group input-group-lg \">\n\n                            <input\n                              name=\"email\"\n                              type=\"email\"\n                              className={`form-control form-control-lg  ${getInputClasses(\n                                \"email\"\n                              )}`}\n                              name=\"email\"\n                              placeholder=\"Email\"\n                              {...formik.getFieldProps(\"email\")}\n                            />\n                          </div>\n                          {formik.touched.email && formik.errors.email ? (\n                            <div className=\"fv-plugins-message-container\">\n                              <div className=\"fv-help-block\">\n                                {formik.errors.email}\n                              </div>\n                            </div>\n                          ) : null}\n                        </div>\n                      </div>\n\n                      <div className=\"form-group row\">\n                        <label className=\"col-xl-3 col-lg-3 col-form-label\">\n                          Password\n                        </label>\n                        <div className=\"col-lg-9 col-xl-9\">\n                          {/* <div className=\"input-group input-group-lg input-group-solid\"> */}\n                          <input\n                            name=\"password\"\n                            type=\"password\"\n                            className={`form-control form-control-lg  ${getInputClasses(\n                              \"password\"\n                            )}`}\n                            name=\"password\"\n                            placeholder=\"password\"\n                            {...formik.getFieldProps(\"password\")}\n                          />\n                          {formik.touched.password && formik.errors.password ? (\n                            <div className=\"fv-plugins-message-container\">\n                              <div className=\"fv-help-block\">\n                                {formik.errors.password}\n                              </div>\n                            </div>\n                          ) : null}\n                          {/* </div> */}\n                        </div>\n                      </div>\n\n                      <div className=\"form-group row\">\n                        <label className=\"col-xl-3 col-lg-3 col-form-label\">\n                          passwordConfirmation\n                        </label>\n                        <div className=\"col-lg-9 col-xl-9\">\n                          {/* <div className=\"input-group input-group-lg input-group-solid\"> */}\n                          <input\n                            name=\"passwordConfirmation\"\n                            type=\"password\"\n                            className={`form-control form-control-lg  ${getInputClasses(\n                              \"passwordConfirmation\"\n                            )}`}\n                            name=\"passwordConfirmation\"\n                            placeholder=\"passwordConfirmation\"\n                            {...formik.getFieldProps(\"passwordConfirmation\")}\n                          />\n                          {formik.touched.passwordConfirmation &&\n                          formik.errors.passwordConfirmation ? (\n                            <div className=\"fv-plugins-message-container\">\n                              <div className=\"fv-help-block\">\n                                {formik.errors.passwordConfirmation}\n                              </div>\n                            </div>\n                          ) : null}\n                          {/* </div> */}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                {/*end::Step 1*/}\n              </form>\n              {/*end::Form Wizard*/}\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={() => handleClose() }\n            variant=\"secondary\"\n            className=\"btn btn-secondary font-weight-bold px-9 py-4 mr-3\"\n          >\n            cancel\n          </Button>\n\n          <Button\n            id=\"kt_login_signin_submit\"\n            type=\"submit\"\n            className={`btn btn-success font-weight-bold px-9 py-4 my-3`}\n            disabled={formik.isSubmitting}\n            variant=\"success\"\n            onClick={formik.handleSubmit}\n          >\n            submit\n            {loading && <span className=\"ml-3 spinner spinner-white\"></span>}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}