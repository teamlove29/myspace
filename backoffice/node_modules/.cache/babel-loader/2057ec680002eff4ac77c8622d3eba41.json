{"ast":null,"code":"/* eslint-disable */\n\"use strict\";\n\nimport { KTUtil } from \"./../../components/util.js\";\nimport KTLayoutBrand from \"./brand.js\";\nimport KTMenu from \"./../../components/menu.js\";\nimport KTLayoutAside from \"./aside.js\";\n\nvar KTLayoutAsideMenu = function () {\n  // Private properties\n  var _element;\n\n  var _menuObject; // Initialize\n\n\n  var _init = function () {\n    var menuDesktopMode = KTUtil.attr(_element, 'data-menu-dropdown') === '1' ? 'dropdown' : 'accordion';\n    var scroll;\n\n    if (KTUtil.attr(_element, 'data-menu-scroll') === '1') {\n      scroll = {\n        rememberPosition: true,\n        // remember position on page reload\n        height: function () {\n          // calculate available scrollable area height\n          var height = parseInt(KTUtil.getViewPort().height);\n\n          if (KTUtil.isBreakpointUp('lg')) {\n            height = height - KTLayoutBrand.getHeight();\n          }\n\n          height = height - (parseInt(KTUtil.css(_element, 'marginBottom')) + parseInt(KTUtil.css(_element, 'marginTop')));\n          return height;\n        }\n      };\n    }\n\n    _menuObject = new KTMenu(_element, {\n      // Vertical scroll\n      scroll: scroll,\n      // Submenu setup\n      submenu: {\n        desktop: menuDesktopMode,\n        tablet: 'accordion',\n        // menu set to accordion in tablet mode\n        mobile: 'accordion' // menu set to accordion in mobile mode\n\n      },\n      // Accordion setup\n      accordion: {\n        expandAll: false // allow having multiple expanded accordions in the menu\n\n      }\n    }); // Disable menu click if aside is fixed and minimized\n\n    _menuObject.on('submenuToggle', function (menu) {\n      if (KTLayoutAside.isMinimized() === true && KTLayoutAside.isHoverable() === false) {\n        return false;\n      }\n    }); // Close aside offcanvas panel before page reload On tablet and mobile\n\n\n    _menuObject.on('linkClick', function (menu) {\n      if (KTUtil.isBreakpointDown('lg')) {\n        // Tablet and mobile mode\n        KTLayoutAside.getOffcanvas().hide(); // Hide offcanvas after general link click\n      }\n    });\n  }; // Public methods\n\n\n  return {\n    init: function (id) {\n      _element = KTUtil.getById(id);\n\n      if (!_element) {\n        return;\n      } // Initialize menu\n\n\n      _init();\n    },\n    getElement: function () {\n      return _element;\n    },\n    getMenu: function () {\n      return _menuObject;\n    },\n    pauseDropdownHover: function (time) {\n      if (_menuObject) {\n        _menuObject.pauseDropdownHover(time);\n      }\n    },\n    closeMobileOffcanvas: function () {\n      if (_menuObject && KTUtil.isMobileDevice()) {\n        _menuObject.hide();\n      }\n    }\n  };\n}(); // Webpack support\n\n\nif (typeof module !== 'undefined') {// module.exports = KTLayoutAsideMenu;\n}\n\nexport default KTLayoutAsideMenu;","map":{"version":3,"sources":["/Users/teem/Developer/lampang-myspace/backoffice/src/_metronic/_assets/js/layout/base/aside-menu.js"],"names":["KTUtil","KTLayoutBrand","KTMenu","KTLayoutAside","KTLayoutAsideMenu","_element","_menuObject","_init","menuDesktopMode","attr","scroll","rememberPosition","height","parseInt","getViewPort","isBreakpointUp","getHeight","css","submenu","desktop","tablet","mobile","accordion","expandAll","on","menu","isMinimized","isHoverable","isBreakpointDown","getOffcanvas","hide","init","id","getById","getElement","getMenu","pauseDropdownHover","time","closeMobileOffcanvas","isMobileDevice","module"],"mappings":"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","sourcesContent":["/* eslint-disable */\n\"use strict\";\n\nimport { KTUtil } from \"./../../components/util.js\";\nimport KTLayoutBrand from \"./brand.js\";\nimport KTMenu from \"./../../components/menu.js\";\nimport KTLayoutAside from \"./aside.js\";\n\nvar KTLayoutAsideMenu = function() {\n    // Private properties\n    var _element;\n    var _menuObject;\n\n\t// Initialize\n\tvar _init = function() {\n\t\tvar menuDesktopMode = (KTUtil.attr(_element, 'data-menu-dropdown') === '1' ? 'dropdown' : 'accordion');\n        var scroll;\n\n\t\tif (KTUtil.attr(_element, 'data-menu-scroll') === '1') {\n\t\t\tscroll = {\n\t\t\t\trememberPosition: true, // remember position on page reload\n\t\t\t\theight: function() { // calculate available scrollable area height\n\t\t\t\t\tvar height = parseInt(KTUtil.getViewPort().height);\n\n\t\t\t\t\tif (KTUtil.isBreakpointUp('lg')) {\n\t\t\t\t\t\theight = height - KTLayoutBrand.getHeight();\n\t\t\t\t\t}\n\n\t\t\t\t\theight = height - (parseInt(KTUtil.css(_element, 'marginBottom')) + parseInt(KTUtil.css(_element, 'marginTop')));\n\n\t\t\t\t\treturn height;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t_menuObject = new KTMenu(_element, {\n\t\t\t// Vertical scroll\n\t\t\tscroll: scroll,\n\n\t\t\t// Submenu setup\n\t\t\tsubmenu: {\n\t\t\t\tdesktop: menuDesktopMode,\n\t\t\t\ttablet: 'accordion', // menu set to accordion in tablet mode\n\t\t\t\tmobile: 'accordion' // menu set to accordion in mobile mode\n\t\t\t},\n\n\t\t\t// Accordion setup\n\t\t\taccordion: {\n\t\t\t\texpandAll: false // allow having multiple expanded accordions in the menu\n\t\t\t}\n\t\t});\n\n        // Disable menu click if aside is fixed and minimized\n        _menuObject.on('submenuToggle', function(menu) {\n            if (KTLayoutAside.isMinimized() === true  && KTLayoutAside.isHoverable() === false) {\n                return false;\n            }\n        });\n\n        // Close aside offcanvas panel before page reload On tablet and mobile\n        _menuObject.on('linkClick', function(menu) {\n            if (KTUtil.isBreakpointDown('lg')) { // Tablet and mobile mode\n                KTLayoutAside.getOffcanvas().hide(); // Hide offcanvas after general link click\n            }\n        });\n\t}\n\n    // Public methods\n\treturn {\n\t\tinit: function(id) {\n            _element = KTUtil.getById(id);\n\n            if (!_element) {\n                return;\n            }\n\n            // Initialize menu\n            _init();\n\t\t},\n\n\t\tgetElement: function() {\n\t\t\treturn _element;\n\t\t},\n\n        getMenu: function() {\n\t\t\treturn _menuObject;\n\t\t},\n\n        pauseDropdownHover: function(time) {\n\t\t\tif (_menuObject) {\n\t\t\t\t_menuObject.pauseDropdownHover(time);\n\t\t\t}\n\t\t},\n\n\t\tcloseMobileOffcanvas: function() {\n\t\t\tif (_menuObject && KTUtil.isMobileDevice()) {\n\t\t\t\t_menuObject.hide();\n\t\t\t}\n\t\t}\n\t};\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n\t// module.exports = KTLayoutAsideMenu;\n}\n\nexport default KTLayoutAsideMenu;"]},"metadata":{},"sourceType":"module"}