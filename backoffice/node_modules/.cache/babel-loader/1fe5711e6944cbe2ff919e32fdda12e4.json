{"ast":null,"code":"var _jsxFileName = \"/Users/teem/Developer/lampang-myspace/backoffice/src/_metronic/_partials/controls/AnimateLoading.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { ProgressBar } from \"react-bootstrap\"; // TODO: Should be rewrited to pure function\n\nclass AnimateLoading extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      width: 0,\n      routeChanged: false\n    };\n  }\n\n  componentDidUpdate(nextProps) {\n    if (this.props.location.pathname !== nextProps.location.pathname) {\n      this.animate();\n      this.scrollToTop();\n    }\n  }\n\n  scrollToTop() {\n    const scrollToTopBtn = document.getElementById(\"kt_scrolltop\");\n\n    if (scrollToTopBtn) {\n      scrollToTopBtn.click();\n    }\n  }\n\n  animate() {\n    this.animateTimeout = setTimeout(() => {\n      if (this.state.width <= 100) {\n        this.setState({\n          width: this.state.width + 10\n        });\n        this.animate();\n      } else {\n        this.stopAnimate();\n      }\n    }, 30);\n  }\n\n  stopAnimate() {\n    clearTimeout(this.animateInterval);\n    this.stopAnimateTimeout = setTimeout(() => {\n      this.setState({\n        width: 0\n      });\n    }, 300);\n  }\n\n  componentWillUnmount() {\n    if (this.stopAnimateTimeout) {\n      clearTimeout(this.stopAnimateTimeout);\n    }\n\n    if (this.animateTimeout) {\n      clearTimeout(this.animateTimeout);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-progress-bar\",\n      style: {\n        height: \"3px\",\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, this.state.width > 0 && /*#__PURE__*/React.createElement(ProgressBar, {\n      variant: \"info\",\n      now: this.state.width,\n      style: {\n        height: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(AnimateLoading);","map":{"version":3,"sources":["/Users/teem/Developer/lampang-myspace/backoffice/src/_metronic/_partials/controls/AnimateLoading.js"],"names":["React","withRouter","ProgressBar","AnimateLoading","Component","state","width","routeChanged","componentDidUpdate","nextProps","props","location","pathname","animate","scrollToTop","scrollToTopBtn","document","getElementById","click","animateTimeout","setTimeout","setState","stopAnimate","clearTimeout","animateInterval","stopAnimateTimeout","componentWillUnmount","render","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,WAAR,QAA0B,iBAA1B,C,CAEA;;AACA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAG3CC,KAH2C,GAGnC;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,YAAY,EAAE;AAFR,KAHmC;AAAA;;AAQ3CC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAApB,KAAiCH,SAAS,CAACE,QAAV,CAAmBC,QAAxD,EAAkE;AAChE,WAAKC,OAAL;AACA,WAAKC,WAAL;AACD;AACF;;AAEDA,EAAAA,WAAW,GAAG;AACZ,UAAMC,cAAc,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAvB;;AACA,QAAIF,cAAJ,EAAoB;AAClBA,MAAAA,cAAc,CAACG,KAAf;AACD;AACF;;AAEDL,EAAAA,OAAO,GAAG;AACR,SAAKM,cAAL,GAAsBC,UAAU,CAAC,MAAM;AACrC,UAAI,KAAKf,KAAL,CAAWC,KAAX,IAAoB,GAAxB,EAA6B;AAC3B,aAAKe,QAAL,CAAc;AAAEf,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,SAAd;AACA,aAAKO,OAAL;AACD,OAHD,MAGO;AACL,aAAKS,WAAL;AACD;AACF,KAP+B,EAO7B,EAP6B,CAAhC;AAQD;;AACDA,EAAAA,WAAW,GAAG;AACZC,IAAAA,YAAY,CAAC,KAAKC,eAAN,CAAZ;AACA,SAAKC,kBAAL,GAA0BL,UAAU,CAAC,MAAM;AACzC,WAAKC,QAAL,CAAc;AAAEf,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAFmC,EAEjC,GAFiC,CAApC;AAGD;;AACDoB,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKD,kBAAT,EAA6B;AAC3BF,MAAAA,YAAY,CAAC,KAAKE,kBAAN,CAAZ;AACD;;AACD,QAAI,KAAKN,cAAT,EAAyB;AACvBI,MAAAA,YAAY,CAAC,KAAKJ,cAAN,CAAZ;AACD;AACF;;AACDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBtB,QAAAA,KAAK,EAAE;AAAxB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKD,KAAL,CAAWC,KAAX,GAAmB,CAAnB,iBACC,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAC,MAArB;AAA4B,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,KAA5C;AAAmD,MAAA,KAAK,EAAE;AAAEsB,QAAAA,MAAM,EAAE;AAAV,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADF;AAUD;;AAzD0C;;AA4D7C,eAAe3B,UAAU,CAACE,cAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {ProgressBar} from \"react-bootstrap\";\n\n// TODO: Should be rewrited to pure function\nclass AnimateLoading extends React.Component {\n  animateTimeout;\n  stopAnimateTimeout;\n  state = {\n    width: 0,\n    routeChanged: false\n  };\n\n  componentDidUpdate(nextProps) {\n    if (this.props.location.pathname !== nextProps.location.pathname) {\n      this.animate();\n      this.scrollToTop();\n    }\n  }\n\n  scrollToTop() {\n    const scrollToTopBtn = document.getElementById(\"kt_scrolltop\");\n    if (scrollToTopBtn) {\n      scrollToTopBtn.click();\n    }\n  }\n\n  animate() {\n    this.animateTimeout = setTimeout(() => {\n      if (this.state.width <= 100) {\n        this.setState({ width: this.state.width + 10 });\n        this.animate();\n      } else {\n        this.stopAnimate();\n      }\n    }, 30);\n  }\n  stopAnimate() {\n    clearTimeout(this.animateInterval);\n    this.stopAnimateTimeout = setTimeout(() => {\n      this.setState({ width: 0 });\n    }, 300);\n  }\n  componentWillUnmount() {\n    if (this.stopAnimateTimeout) {\n      clearTimeout(this.stopAnimateTimeout);\n    }\n    if (this.animateTimeout) {\n      clearTimeout(this.animateTimeout);\n    }\n  }\n  render() {\n    return (\n      <div\n        className=\"header-progress-bar\"\n        style={{ height: \"3px\", width: \"100%\" }}\n      >\n        {this.state.width > 0 && (\n          <ProgressBar variant=\"info\" now={this.state.width} style={{ height: \"3px\" }}  />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(AnimateLoading);\n"]},"metadata":{},"sourceType":"module"}