{"ast":null,"code":"var _jsxFileName = \"/Users/teem/Developer/lampang-myspace/backoffice/src/_metronic/_helpers/TableRowSelectionHelpers.js\";\nimport React from \"react\";\n\nfunction SelectionCheckbox({\n  isSelected,\n  onChange\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox checkbox-single\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: isSelected,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction groupingItemOnSelect(props) {\n  const {\n    ids,\n    setIds,\n    customerId\n  } = props;\n\n  if (ids.some(id => id === customerId)) {\n    setIds(ids.filter(id => id !== customerId));\n  } else {\n    const newIds = [...ids];\n    newIds.push(customerId);\n    setIds(newIds);\n  }\n}\n\nfunction groupingAllOnSelect(props) {\n  const {\n    isSelected,\n    setIds,\n    entities\n  } = props;\n\n  if (!isSelected) {\n    const allIds = [];\n    entities.forEach(el => allIds.push(el.id));\n    setIds(allIds);\n  } else {\n    setIds([]);\n  }\n\n  return isSelected;\n} // check official documentations: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Row%20Selection&selectedStory=Custom%20Selection%20Column%20Header%20Style&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\n\n\nexport function getSelectRow(props) {\n  const {\n    entities,\n    ids,\n    setIds\n  } = props;\n  return {\n    mode: \"checkbox\",\n    clickToSelect: true,\n    hideSelectAll: false,\n    selectionHeaderRenderer: () => {\n      const isSelected = entities && entities.length > 0 && entities.length === ids.length;\n      const props = {\n        isSelected,\n        entities,\n        setIds\n      };\n      return /*#__PURE__*/React.createElement(SelectionCheckbox, {\n        isSelected: isSelected,\n        onChange: () => groupingAllOnSelect(props),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      });\n    },\n    selectionRenderer: ({\n      rowIndex\n    }) => {\n      const isSelected = ids.some(el => el === entities[rowIndex].id);\n      const props = {\n        ids,\n        setIds,\n        customerId: entities[rowIndex].id\n      };\n      return /*#__PURE__*/React.createElement(SelectionCheckbox, {\n        isSelected: isSelected,\n        onChange: () => groupingItemOnSelect(props),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n}","map":{"version":3,"sources":["/Users/teem/Developer/lampang-myspace/backoffice/src/_metronic/_helpers/TableRowSelectionHelpers.js"],"names":["React","SelectionCheckbox","isSelected","onChange","display","groupingItemOnSelect","props","ids","setIds","customerId","some","id","filter","newIds","push","groupingAllOnSelect","entities","allIds","forEach","el","getSelectRow","mode","clickToSelect","hideSelectAll","selectionHeaderRenderer","length","selectionRenderer","rowIndex"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction SelectionCheckbox({ isSelected, onChange }) {\n  return (\n    <>\n      <input type=\"checkbox\" style={{ display: \"none\" }} />\n      <label className=\"checkbox checkbox-single\">\n        <input type=\"checkbox\" checked={isSelected} onChange={onChange} />\n        <span />\n      </label>\n    </>\n  );\n}\n\nfunction groupingItemOnSelect(props) {\n  const { ids, setIds, customerId } = props;\n  if (ids.some((id) => id === customerId)) {\n    setIds(ids.filter((id) => id !== customerId));\n  } else {\n    const newIds = [...ids];\n    newIds.push(customerId);\n    setIds(newIds);\n  }\n}\n\nfunction groupingAllOnSelect(props) {\n  const { isSelected, setIds, entities } = props;\n  if (!isSelected) {\n    const allIds = [];\n    entities.forEach((el) => allIds.push(el.id));\n    setIds(allIds);\n  } else {\n    setIds([]);\n  }\n\n  return isSelected;\n}\n\n// check official documentations: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Row%20Selection&selectedStory=Custom%20Selection%20Column%20Header%20Style&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\nexport function getSelectRow(props) {\n  const { entities, ids, setIds } = props;\n  return {\n    mode: \"checkbox\",\n    clickToSelect: true,\n    hideSelectAll: false,\n    selectionHeaderRenderer: () => {\n      const isSelected =\n        entities && entities.length > 0 && entities.length === ids.length;\n      const props = { isSelected, entities, setIds };\n      return (\n        <SelectionCheckbox\n          isSelected={isSelected}\n          onChange={() => groupingAllOnSelect(props)}\n        />\n      );\n    },\n    selectionRenderer: ({ rowIndex }) => {\n      const isSelected = ids.some((el) => el === entities[rowIndex].id);\n      const props = { ids, setIds, customerId: entities[rowIndex].id };\n      return (\n        <SelectionCheckbox\n          isSelected={isSelected}\n          onChange={() => groupingItemOnSelect(props)}\n        />\n      );\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}