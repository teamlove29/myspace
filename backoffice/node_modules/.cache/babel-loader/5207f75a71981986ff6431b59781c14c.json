{"ast":null,"code":"var _jsxFileName = \"/Users/teem/Developer/lampang-myspace/backoffice/src/pages/user/EditUser.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport firebase from \"../../config/config\";\nexport default function AddUser(props) {\n  const history = useHistory();\n  const MySwal = withReactContent(Swal);\n  const [loading, setLoading] = useState(false);\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => {\n    setShow(false);\n    setTimeout(() => {\n      history.goBack();\n    }, 100);\n  };\n\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    handleShow();\n  }, [props.show]);\n  const initialValues = {\n    username: \"Marutthep\",\n    email: \"TeemMarutthep@gmail.com\",\n    role: 'admin'\n  };\n\n  const enableLoading = () => {\n    setLoading(true);\n  };\n\n  const disableLoading = () => {\n    setLoading(false);\n  };\n\n  const getInputClasses = fieldname => {\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\n      return \"is-invalid\";\n    }\n\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n      return \"is-valid\";\n    }\n\n    return \"\";\n  };\n\n  const handleEdit = (value, {\n    setStatus,\n    setSubmitting\n  }) => {\n    console.log(value); // var auth = firebase.auth();\n    // const emailAddress ='test@test.com'\n    // auth.sendPasswordResetEmail(emailAddress)\n    // .then(() => {\n    //   console.log('good')\n    // }).catch(function(error) {\n    //  console.log(error)\n    // });\n    // firebase.auth().createUserWithEmailAndPassword(value.email, value.password)\n    // .then((reslut) => {\n    //   console.log(reslut)\n    // })\n    // .catch((error) => {\n    //   var errorCode = error.code;\n    //   var errorMessage = error.message;\n    //   console.log(errorMessage)\n    // });\n\n    MySwal.fire({\n      position: 'top',\n      icon: \"question\",\n      title: /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"display-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 14\n        }\n      }, \"Are you sure ?\"),\n      text: \"Are you sure you want to edit data ?\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, edit it!\"\n    }).then(result => {\n      // Result.value after click yes\n      if (result.value) {\n        Swal.fire({\n          position: 'top',\n          icon: \"success\",\n          title: \"Edited\",\n          text: \"Your file has been edited.\",\n          showConfirmButton: false\n        });\n        disableLoading();\n        setSubmitting(false);\n        formik.handleReset();\n        handleClose();\n      }\n    });\n  };\n\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n  const Userchema = Yup.object().shape({\n    username: Yup.string().min(6, \"Minimum 6 symbols\").max(50, \"Maximum 50 symbols\").required(\"Required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Required\")\n  });\n  const formik = useFormik({\n    initialValues,\n    validationSchema: Userchema,\n    onSubmit: (value, {\n      setStatus,\n      setSubmitting\n    }) => {\n      enableLoading();\n      setTimeout(() => {\n        handleEdit(value, {\n          setStatus,\n          setSubmitting\n        });\n        disableLoading();\n        setSubmitting(false);\n        formik.handleReset(); //  setStatus(errorMessage);\n      }, 1000);\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"Edit User\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-12 col-xxl-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 27\n    }\n  }, \"Fist Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: `form-control form-control-lg ${getInputClasses(\"firstName\")}`,\n    name: \"firstName\",\n    type: \"text\",\n    placeholder: \"FirstName\"\n  }, formik.getFieldProps(\"firstName\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  })), formik.touched.firstName && formik.errors.firstName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-plugins-message-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-help-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }, formik.errors.firstName)) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 27\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: `form-control form-control-lg  ${getInputClasses(\"lastName\")}`,\n    name: \"lastName\",\n    type: \"text\",\n    placeholder: \"LastName\"\n  }, formik.getFieldProps(\"lastName\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  })), formik.touched.lastName && formik.errors.lastName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-plugins-message-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-help-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, formik.errors.lastName)) : null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }, \"If you want your invoices addressed to a company. Leave blank to use your full name.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 27\n    }\n  }, \"Contact Phone\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"la la-phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 35\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    name: \"tel\",\n    type: \"tel\",\n    className: `form-control form-control-lg  ${getInputClasses(\"phone\")}`,\n    name: \"phone\",\n    placeholder: \"Phone\"\n  }, formik.getFieldProps(\"phone\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 31\n    }\n  })), formik.touched.phone && formik.errors.phone ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-plugins-message-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-help-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 35\n    }\n  }, formik.errors.phone)) : null), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }, \"We'll never share your email with anyone else.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 27\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"la la-at\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 35\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    name: \"email\",\n    type: \"email\",\n    className: `form-control form-control-lg  ${getInputClasses(\"email\")}`,\n    name: \"email\",\n    readOnly: \"true\",\n    placeholder: \"Email\"\n  }, formik.getFieldProps(\"email\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 31\n    }\n  })), formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-plugins-message-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-help-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 35\n    }\n  }, formik.errors.email)) : null))))))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleClose(),\n    variant: \"secondary\",\n    className: \"btn font-weight-bold px-9 py-4 mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, \"cancel\"), /*#__PURE__*/React.createElement(Button, {\n    id: \"kt_login_signin_submit\",\n    type: \"submit\",\n    className: `btn  font-weight-bold px-9 py-4 my-3`,\n    disabled: formik.isSubmitting,\n    variant: \"success\",\n    onClick: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, \"edit\", loading && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-3 spinner spinner-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/teem/Developer/lampang-myspace/backoffice/src/pages/user/EditUser.js"],"names":["React","useState","useEffect","useFormik","Yup","Modal","Button","useHistory","Redirect","Swal","withReactContent","firebase","AddUser","props","history","MySwal","loading","setLoading","show","setShow","handleClose","setTimeout","goBack","handleShow","initialValues","username","email","role","enableLoading","disableLoading","getInputClasses","fieldname","formik","touched","errors","handleEdit","value","setStatus","setSubmitting","console","log","fire","position","icon","title","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","showConfirmButton","handleReset","phoneRegExp","Userchema","object","shape","string","min","max","required","validationSchema","onSubmit","handleSubmit","getFieldProps","firstName","lastName","phone","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport firebase from \"../../config/config\";\n\nexport default function AddUser(props) {\n  const history = useHistory()\n  const MySwal = withReactContent(Swal);\n  const [loading, setLoading] = useState(false);\n  const [show, setShow] = useState(true);\n  const handleClose = () => {\n    setShow(false)\n    setTimeout(() => {\n      history.goBack()\n    }, 100)\n};\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    handleShow()\n  }, [props.show])\n  \n\n  const initialValues = {\n    username: \"Marutthep\",\n    email: \"TeemMarutthep@gmail.com\",\n    role:'admin'\n  };\n\n  const enableLoading = () => {\n    setLoading(true);\n  };\n  const disableLoading = () => {\n    setLoading(false);\n  };\n\n  const getInputClasses = (fieldname) => {\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\n      return \"is-invalid\";\n    }\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n      return \"is-valid\";\n    }\n    return \"\";\n  };\n\n\n\n\n  \n\n  const handleEdit = (value, { setStatus, setSubmitting }) => {\n    console.log(value);\n    // var auth = firebase.auth();\n    // const emailAddress ='test@test.com'\n    // auth.sendPasswordResetEmail(emailAddress)\n    // .then(() => {\n    //   console.log('good')\n    // }).catch(function(error) {\n    //  console.log(error)\n    // });\n    // firebase.auth().createUserWithEmailAndPassword(value.email, value.password)\n    // .then((reslut) => {\n    //   console.log(reslut)\n    // })\n    // .catch((error) => {\n    //   var errorCode = error.code;\n    //   var errorMessage = error.message;\n    //   console.log(errorMessage)\n    // });\n\n    MySwal.fire({\n      position:'top',\n      icon: \"question\",\n      title: <h1 className=\"display-5\">Are you sure ?</h1>,\n      text: \"Are you sure you want to edit data ?\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, edit it!\",\n    }).then((result) => {\n      // Result.value after click yes\n      if (result.value) {\n        Swal.fire({\n          position:'top',\n          icon: \"success\",\n          title: \"Edited\",\n          text: \"Your file has been edited.\",\n          showConfirmButton: false,\n        });\n        disableLoading();\n        setSubmitting(false);\n        formik.handleReset();\n        handleClose();\n      }\n    });\n  };\n\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\n  const Userchema = Yup.object().shape({\n    username: Yup.string()\n      .min(6, \"Minimum 6 symbols\")\n      .max(50, \"Maximum 50 symbols\")\n      .required(\"Required\"),\n    email: Yup.string()\n      .email(\"Invalid email\")\n      .required(\"Required\"),\n  });\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: Userchema,\n    onSubmit: (value, { setStatus, setSubmitting }) => {\n      enableLoading();\n      setTimeout(() => {\n        handleEdit(value, { setStatus, setSubmitting });\n        disableLoading();\n        setSubmitting(false);\n        formik.handleReset();\n        //  setStatus(errorMessage);\n      }, 1000);\n    },\n  });\n\n  return (\n    <>\n          <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        show={show}\n        onHide={handleClose}\n      >\n        <Modal.Header >\n          <Modal.Title>Edit User</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <div className=\"row justify-content-center \">\n              <div className=\"col-xl-12 col-xxl-12\">\n                {/*begin::Form Wizard*/}\n                <form onSubmit={formik.handleSubmit} className=\"form\">\n                  {/*begin::Step 1*/}\n                    <div className=\"row\">\n                      <div className=\"col-xl-12\">\n                        <div className=\"form-group row mt-3\">\n                          <label className=\"col-xl-3 col-lg-3 col-form-label\">\n                            Fist Name\n                          </label>\n                          <div className=\"col-lg-9 col-xl-9\">\n                            <input\n                              className={`form-control form-control-lg ${getInputClasses(\n                                \"firstName\"\n                              )}`}\n                              name=\"firstName\"\n                              type=\"text\"\n                              placeholder=\"FirstName\"\n                              {...formik.getFieldProps(\"firstName\")}\n                            />\n                            {formik.touched.firstName &&\n                            formik.errors.firstName ? (\n                              <div className=\"fv-plugins-message-container\">\n                                <div className=\"fv-help-block\">\n                                  {formik.errors.firstName}\n                                </div>\n                              </div>\n                            ) : null}\n                          </div>\n                        </div>\n                        <div className=\"form-group row\">\n                          <label className=\"col-xl-3 col-lg-3 col-form-label\">\n                            Last Name\n                          </label>\n                          <div className=\"col-lg-9 col-xl-9\">\n                            <input\n                              className={`form-control form-control-lg  ${getInputClasses(\n                                \"lastName\"\n                              )}`}\n                              name=\"lastName\"\n                              type=\"text\"\n                              placeholder=\"LastName\"\n                              {...formik.getFieldProps(\"lastName\")}\n                            />\n                            {formik.touched.lastName &&\n                            formik.errors.lastName ? (\n                              <div className=\"fv-plugins-message-container\">\n                                <div className=\"fv-help-block\">\n                                  {formik.errors.lastName}\n                                </div>\n                              </div>\n                            ) : null}\n                            <span className=\"form-text text-muted\">\n                              If you want your invoices addressed to a company.\n                              Leave blank to use your full name.\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"form-group row\">\n                          <label className=\"col-xl-3 col-lg-3 col-form-label\">\n                            Contact Phone\n                          </label>\n                          <div className=\"col-lg-9 col-xl-9\">\n                            <div className=\"input-group input-group-lg \">\n                              <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                  <i className=\"la la-phone\" />\n                                </span>\n                              </div>\n                              <input\n                                name=\"tel\"\n                                type=\"tel\"\n                                className={`form-control form-control-lg  ${getInputClasses(\n                                  \"phone\"\n                                )}`}\n                                name=\"phone\"\n                                placeholder=\"Phone\"\n                                {...formik.getFieldProps(\"phone\")}\n                              />\n                              {formik.touched.phone && formik.errors.phone ? (\n                                <div className=\"fv-plugins-message-container\">\n                                  <div className=\"fv-help-block\">\n                                    {formik.errors.phone}\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                            <span className=\"form-text text-muted\">\n                              We'll never share your email with anyone else.\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"form-group row\">\n                          <label className=\"col-xl-3 col-lg-3 col-form-label\">\n                            Email Address\n                          </label>\n                          <div className=\"col-lg-9 col-xl-9\">\n                            <div className=\"input-group input-group-lg \">\n                              <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                  <i className=\"la la-at\" />\n                                </span>\n                              </div>\n                              <input\n                                name=\"email\"\n                                type=\"email\"\n                                className={`form-control form-control-lg  ${getInputClasses(\n                                  \"email\"\n                                )}`}\n                                name=\"email\"\n                                readOnly=\"true\"\n                                placeholder=\"Email\"\n                                {...formik.getFieldProps(\"email\")}\n                              />\n                              {formik.touched.email && formik.errors.email ? (\n                                <div className=\"fv-plugins-message-container\">\n                                  <div className=\"fv-help-block\">\n                                    {formik.errors.email}\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  {/*end::Step 1*/}\n                </form>\n                {/*end::Form Wizard*/}\n              </div>\n            </div>\n\n      </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={() => handleClose()}\n            variant=\"secondary\"\n            className=\"btn font-weight-bold px-9 py-4 mr-3\">\n            cancel\n          </Button>\n\n          <Button\n            id=\"kt_login_signin_submit\"\n            type=\"submit\"\n            className={`btn  font-weight-bold px-9 py-4 my-3`}\n            disabled={formik.isSubmitting}\n            variant=\"success\"\n            onClick={formik.handleSubmit}>\n            edit\n            {loading && <span className=\"ml-3 spinner spinner-white\"></span>}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}