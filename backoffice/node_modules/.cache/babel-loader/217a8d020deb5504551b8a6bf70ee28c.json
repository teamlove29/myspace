{"ast":null,"code":"var _jsxFileName = \"/Users/teem/Developer/lampang-myspace/backoffice/src/_metronic/_partials/controls/Notice.js\";\nimport React, { forwardRef } from \"react\";\nimport clsx from \"clsx\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../_helpers\";\nexport const Notice = forwardRef(({\n  icon,\n  svg,\n  iconRef,\n  textRef,\n  iconWrapperRef,\n  className,\n  children,\n  ...props\n}, ref) => {\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n    ref: ref,\n    role: \"alert\",\n    className: clsx(\"alert alert-custom alert-white alert-shadow gutter-b\", className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert-icon alert-icon-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"svg-icon svg-icon-3x svg-icon-primary mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SVG, {\n    src: toAbsoluteUrl(\"/media/svg/icons/Tools/Compass.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert-text\",\n    ref: textRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, children));\n}); // Set display name for debugging.\n\nif (process.env.NODE_ENV !== \"production\") {\n  Notice.displayName = \"Notice\";\n}","map":{"version":3,"sources":["/Users/teem/Developer/lampang-myspace/backoffice/src/_metronic/_partials/controls/Notice.js"],"names":["React","forwardRef","clsx","SVG","toAbsoluteUrl","Notice","icon","svg","iconRef","textRef","iconWrapperRef","className","children","props","ref","process","env","NODE_ENV","displayName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAAQC,aAAR,QAA4B,gBAA5B;AAEA,OAAO,MAAMC,MAAM,GAAGJ,UAAU,CAC9B,CACE;AACEK,EAAAA,IADF;AAEEC,EAAAA,GAFF;AAGEC,EAAAA,OAHF;AAIEC,EAAAA,OAJF;AAKEC,EAAAA,cALF;AAMEC,EAAAA,SANF;AAOEC,EAAAA,QAPF;AAQE,KAAGC;AARL,CADF,EAWEC,GAXF,KAYK;AACH,sBACE,6CACMD,KADN;AAEE,IAAA,GAAG,EAAEC,GAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,SAAS,EAAEZ,IAAI,CACb,sDADa,EAEbS,SAFa,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBASE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,4CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,GAAG,EAAEP,aAAa,CAAC,oCAAD,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CATF,eAiBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAEK,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,QADH,CAjBF,CADF;AAuBD,CArC6B,CAAzB,C,CAwCP;;AACA,IAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCZ,EAAAA,MAAM,CAACa,WAAP,GAAqB,QAArB;AACD","sourcesContent":["import React, { forwardRef } from \"react\";\nimport clsx from \"clsx\";\nimport SVG from \"react-inlinesvg\";\nimport {toAbsoluteUrl} from \"../../_helpers\";\n\nexport const Notice = forwardRef(\n  (\n    {\n      icon,\n      svg,\n      iconRef,\n      textRef,\n      iconWrapperRef,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div\n        {...props}\n        ref={ref}\n        role=\"alert\"\n        className={clsx(\n          \"alert alert-custom alert-white alert-shadow gutter-b\",\n          className\n        )}\n      >\n        <div className=\"alert-icon alert-icon-top\">\n          <span className=\"svg-icon svg-icon-3x svg-icon-primary mt-4\">\n            <SVG\n              src={toAbsoluteUrl(\"/media/svg/icons/Tools/Compass.svg\")}\n            ></SVG>\n          </span>\n        </div>\n\n        <div className=\"alert-text\" ref={textRef}>\n          {children}\n        </div>\n      </div>\n    );\n  }\n);\n\n// Set display name for debugging.\nif (process.env.NODE_ENV !== \"production\") {\n  Notice.displayName = \"Notice\";\n}\n"]},"metadata":{},"sourceType":"module"}