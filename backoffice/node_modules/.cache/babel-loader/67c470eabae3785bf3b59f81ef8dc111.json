{"ast":null,"code":"var _jsxFileName = \"/Users/teem/Developer/lampang-myspace/backoffice/src/pages/genres/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, ListGroup, InputGroup, FormControl, Button, Form } from \"react-bootstrap\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport filterFactory, { selectFilter } from \"react-bootstrap-table2-filter\";\nimport genresData from \"../../data/music/genres.json\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nexport default function Index() {\n  //   const genres = genresData.genres;\n  const {\n    SearchBar\n  } = Search;\n  const MySwal = withReactContent(Swal);\n  const [genres, setGenres] = useState([]);\n  const [state, setState] = useState(\"\");\n  useEffect(() => {\n    setGenres(genresData);\n  }, []); // const listItems = currentPost.map((value, index) => {\n  //   return (\n  //     <>\n  //       <ListGroup.Item key={index}>\n  //         {value}\n  //         <a\n  //           onClick={() => {\n  //             handleDel(value);\n  //           }}\n  //           className=\"btn-sm float-right\"\n  //         >\n  //           <i class=\"flaticon2-cancel text-danger\"></i>\n  //         </a>\n  //       </ListGroup.Item>\n  //     </>\n  //   );\n  // });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (state != \"\") setGenres([state, ...genres]);\n    setState(\"\");\n  };\n\n  const handleChange = e => {\n    const inputGenre = e.target.value;\n    setState(inputGenre);\n  };\n\n  const handleDel = value => {\n    MySwal.fire({\n      position: \"top\",\n      icon: \"question\",\n      title: /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"display-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 14\n        }\n      }, \"Are you sure ?\"),\n      text: \"Are you sure you want to delete data ?\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, edit it!\"\n    }).then(result => {\n      if (result.value) {\n        setGenres(genres.filter(v => v != value));\n      }\n    });\n  };\n\n  const columns = [{\n    dataField: \"genres\",\n    text: \"Name\",\n    classes: \"align-middle\",\n    sort: true\n  } // {\n  //   dataField: \"id\",\n  //   text: \"Action\",\n  //   formatter: actionButton,\n  //   // events: rowEvents,\n  //   classes: \"text-center align-middle\",\n  //   headerClasses: \"text-center\",\n  //   headerStyle: \"\",\n  // },\n  ];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    onChange: e => {\n      handleChange(e);\n    },\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    value: state,\n    placeholder: \"Add genre...\",\n    \"aria-label\": \"Add genre\",\n    \"aria-describedby\": \"basic-addon2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"outline-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Button\")))), /*#__PURE__*/React.createElement(ToolkitProvider, {\n    keyField: \"id\",\n    data: users,\n    columns: columns,\n    search: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, props => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Genre list \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block text-muted pt-2 font-size-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Add row and group actions\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(SearchBar, Object.assign({}, props.searchProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, \"Search\"), \" in all fields\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }), select.length > 1 ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => deluser(),\n    className: \"btn btn-sm btn-danger mt-5 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"Delete All Select\") : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({}, props.baseProps, {\n    wrapperClasses: \"table-responsive\",\n    classes: \"table table-head-custom table-vertical-center \",\n    bootstrap4: true,\n    selectRow: selectRow // loading={true}\n    // overlay={ overlayFactory({ spinner: true, background: 'rgba(192,192,192,0.3)' }) }\n    ,\n    keyField: \"id\" // ข้อมูลในตาราง\n    ,\n    data: users === null ? [] : users // รูปแบบตาราง\n    ,\n    columns: columns,\n    bordered: false // ค่าเริ่มต้นให้ DESC หรือ ASC ตามที่กำหนด\n    // defaultSorted={defaultSorted}\n    // ถ้าค่าว่างให้ทำการ...\n    ,\n    noDataIndication: dataEmpty // กรองข้อมูล\n    ,\n    filter: filterFactory() // ตัวเลื่อนหน้า\n    ,\n    pagination: paginationFactory(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  })))))));\n}","map":{"version":3,"sources":["/Users/teem/Developer/lampang-myspace/backoffice/src/pages/genres/index.js"],"names":["React","useState","useEffect","Card","ListGroup","InputGroup","FormControl","Button","Form","ToolkitProvider","Search","filterFactory","selectFilter","genresData","Swal","withReactContent","Index","SearchBar","MySwal","genres","setGenres","state","setState","handleSubmit","event","preventDefault","handleChange","e","inputGenre","target","value","handleDel","fire","position","icon","title","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","filter","v","columns","dataField","classes","sort","users","props","searchProps","select","length","deluser","baseProps","selectRow","dataEmpty","paginationFactory"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  ListGroup,\n  InputGroup,\n  FormControl,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport filterFactory, { selectFilter } from \"react-bootstrap-table2-filter\";\nimport genresData from \"../../data/music/genres.json\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nexport default function Index() {\n  //   const genres = genresData.genres;\n  const { SearchBar } = Search;\n  const MySwal = withReactContent(Swal);\n  const [genres, setGenres] = useState([]);\n  const [state, setState] = useState(\"\");\n\n  useEffect(() => {\n    setGenres(genresData);\n  }, []);\n\n\n\n  // const listItems = currentPost.map((value, index) => {\n  //   return (\n  //     <>\n  //       <ListGroup.Item key={index}>\n  //         {value}\n  //         <a\n  //           onClick={() => {\n  //             handleDel(value);\n  //           }}\n  //           className=\"btn-sm float-right\"\n  //         >\n  //           <i class=\"flaticon2-cancel text-danger\"></i>\n  //         </a>\n  //       </ListGroup.Item>\n  //     </>\n  //   );\n  // });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (state != \"\") setGenres([state, ...genres]);\n    setState(\"\");\n  };\n  const handleChange = (e) => {\n    const inputGenre = e.target.value;\n    setState(inputGenre);\n  };\n  const handleDel = (value) => {\n    MySwal.fire({\n      position: \"top\",\n      icon: \"question\",\n      title: <h1 className=\"display-5\">Are you sure ?</h1>,\n      text: \"Are you sure you want to delete data ?\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, edit it!\",\n    }).then((result) => {\n      if (result.value) {\n        setGenres(genres.filter((v) => v != value));\n      }\n    });\n  };\n\n\n  const columns = [\n    { dataField: \"genres\", text: \"Name\", classes: \"align-middle\", sort: true },\n    // {\n    //   dataField: \"id\",\n    //   text: \"Action\",\n    //   formatter: actionButton,\n    //   // events: rowEvents,\n    //   classes: \"text-center align-middle\",\n    //   headerClasses: \"text-center\",\n    //   headerStyle: \"\",\n    // },\n  ];\n\n\n  return (\n    <>\n      <Card className=\"container\"> \n\n        <Card.Body>\n          <Form onSubmit={handleSubmit}>\n            <InputGroup\n              onChange={(e) => {\n                handleChange(e);\n              }}\n              className=\"mb-5\"\n            >\n              <FormControl\n                value={state}\n                placeholder=\"Add genre...\"\n                aria-label=\"Add genre\"\n                aria-describedby=\"basic-addon2\"\n              />\n              <InputGroup.Append>\n                <Button type=\"submit\" variant=\"outline-secondary\">\n                  Button\n                </Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </Form>\n\n\n\n          <ToolkitProvider\n              keyField=\"id\"\n              data={users}\n              columns={columns}\n              search\n            >\n              {(props) => (\n                <>\n                        <Card.Header>\n          <h3>Genre list </h3>\n          <span className=\"d-block text-muted pt-2 font-size-sm\">\n            Add row and group actions\n          </span>\n        </Card.Header>\n    \n                  <hr />\n                  <br />\n                  <SearchBar {...props.searchProps} />\n                  <br />\n                  <small className=\"text-muted\">\n                    {\" \"}\n                    <b>Search</b> in all fields\n                  </small>{\" \"}\n                  <br />\n                  {select.length > 1 ? (\n                    <button\n                      onClick={() => deluser()}\n                      className=\"btn btn-sm btn-danger mt-5 mb-5\"\n                    >\n                      Delete All Select\n                    </button>\n                  ) : null}\n                  <br />\n                  {/* <button \n                className=\"btn btn-danger btn-sm \"\n                onClick={() => handleClick() }> Delete All </button> */}\n                  <BootstrapTable\n                    {...props.baseProps}\n                    wrapperClasses=\"table-responsive\"\n                    classes=\"table table-head-custom table-vertical-center \"\n                    bootstrap4\n                    selectRow={selectRow}\n                    // loading={true}\n                    // overlay={ overlayFactory({ spinner: true, background: 'rgba(192,192,192,0.3)' }) }\n                    keyField=\"id\"\n                    // ข้อมูลในตาราง\n                    data={users === null ? [] : users}\n                    // รูปแบบตาราง\n                    columns={columns}\n                    bordered={false}\n                    // ค่าเริ่มต้นให้ DESC หรือ ASC ตามที่กำหนด\n                    // defaultSorted={defaultSorted}\n\n                    // ถ้าค่าว่างให้ทำการ...\n                    noDataIndication={dataEmpty}\n                    // กรองข้อมูล\n                    filter={filterFactory()}\n                    // ตัวเลื่อนหน้า\n                    pagination={paginationFactory()}\n                  />\n                </>\n              )}\n            </ToolkitProvider>\n\n\n\n\n          {/* style={{ width: \"30rem\" }} */}\n          {/* <Card>\n            {genres != \"\" ? (\n              <ListGroup variant=\"flush\">{listItems}</ListGroup>\n            ) : (\n              <h1 className=\"text-center mt-5 mb-5\">no data .... </h1>\n            )}\n          </Card> */}\n        </Card.Body>\n\n      </Card>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}